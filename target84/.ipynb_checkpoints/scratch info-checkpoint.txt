Gets function
cookie: $0x78960173
cookie rip add: $rip+0x2ef4a0
touch1: $0x4014a0
touch2: $0x4014ce
touch3: $0x4015e5
cookie gen: $0x402bbd
mine allocates 0x18 which is 24 bits for the stack of the program
-inserting all 0's with one 01 at beginning and the instruction needs to be reversed at beginning of line to input correctly to the stack because of how it reads the code



there is a srand it looks like so maybe could seed a value I want to know where things will be evantually

there is a strtod which I think is the string to decimal
used the compile, encode, & dump to get the code needed for buffer

in phase2 i needed to push touch2 onto stack to return to
then mov cookie into rdi register then c3 to ret
-figured out if I don't put the code in sequential order
 -the 00's cause the program to try and do add's to $al register
 -switching to using "no op" 0x90 for rtarget
   -(didn't seem to work well switched back on last)

in phase3 i overflowed to go back to my buf and code
-using same procedure as before but calling touch3
-also needed a "safe" place for my hex cookie
 -overflowed it past the return address I added
 -calculated and used this add as exploit code calling touch3

phase4 in Rtarget
-overflow into established stack calling functions needed
 -find and calcute address needed setval264 then addval 174
 -found i needed to pop old rax with first gadget
 -then use my cookie, which I found needed to be backward like addr
 -then second gadget to do move into rdi
 -then call the touch2 function

phase 5 in Rtarget
-overflow mving around registers
 -move rsp address into rax 4889e0c3
 -then to rdi 4889c7c3
 -pop rax 58909090c3
 -need a constant to calculate cookie distance from orig rsp
  -how big my overflow lines are in hex 0x48, rax after pop
 -then moving it around to different registers to do calc & resave
  -found a few addr's that caused some weird things
  -had to use some that did extra things with the al & bl "no ops"
  -moved constant eax to edx "sbb %bl,%bl->18db" 89c218dbc3
  -found one to move edx to ecx "sub %al,%al->28c0" 89d128c0c3
  -found one to move ecx to esi 89ce90c3
  -used a full lea to add prev stored rdi with rsi into rax 488d0437c3
  -used the same rax into rdi 4889c7c3
   -now is setup with first argument rdi to pass into touch3
  -like pre use addr of touch3 which takes the rdi
  -then cookie below that with 00 null termination

